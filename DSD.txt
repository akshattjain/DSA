full adder 

module fulladder(Sum,Carry,A,B,Cin);
input A,B,Cin;
output Sum,Carry;
wire w1,w2,w3,w4;
xor G1(w1,A,B);
xor G2(Sum,w1,Cin);
and G3(w2,A,B);
and G4(w3,B,Cin);
and G5(w4,A,Cin);
or G6(Carry,w2,w3,w4);
endmodule




full adder_tb

module fullAdder_ak_tb;
reg a,b,cin;
wire Sum,Carry;
fulladder uut(.Sum(Sum), .Carry(Carry), .A(a), .B(b), .Cin(cin));
initial
begin
a=0; b=0; cin=0;
#100;
a=0; b=0; cin=1;
#100;
a=0; b=1; cin=0;
#100;
a=0; b=1; cin=1;
#100;
a=1; b=0; cin=0;
#100;
a=1; b=0; cin=1;
#100;
a=1; b=1; cin=0;
#100;
a=1; b=1; cin=1;
#100;
end 
endmodule



full subtractor

module fullAdder_ak_tb;
reg a,b,cin;
wire Sum,Carry;
fulladder uut(.Sum(Sum), .Carry(Carry), .A(a), .B(b), .Cin(cin));
initial
begin
a=0; b=0; cin=0;
#100;
a=0; b=0; cin=1;
#100;
a=0; b=1; cin=0;
#100;
a=0; b=1; cin=1;
#100;
a=1; b=0; cin=0;
#100;
a=1; b=0; cin=1;
#100;
a=1; b=1; cin=0;
#100;
a=1; b=1; cin=1;
#100;
end 
endmodule
